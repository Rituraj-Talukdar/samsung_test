#include<iostream>
using namespace std;

int n, a[2001][6];
 
int min(int x , int y){return(x>=y) ? y : x ;}

int abs(int x){return (x > 0) ? x : -x ;}

int dist(int x1,int y1,int x2,int y2){return abs(x2-x1) + abs(y2 - y1);}

void wormhole ( int x1 , int y1 , bool *visited , int &ans , int val ) {
 	if ( x1 == a[n+1][0] && y1 == a[n+1][1] ){
 		ans = min ( ans , val);
 	    return ;
 	}
	    
 	for ( int i = 1 ; i <= n + 1 ;i++) {
 		if (!visited[i]) {
 	    	visited[i] = true ;
	    	 	 
 	    	//entry
 	    	wormhole ( a[i][2] , a[i][3] , visited , ans , val + dist ( x1 , y1 , a[i][0] , a[i][1] ) + a[i][4]);
	    	
 	    	//exit
 	    	wormhole ( a[i][0] , a[i][1] , visited , ans , val + dist ( x1 , y1 , a[i][2] , a[i][3] ) + a[i][4]);
	    	 	 
 	    	visited[i] = false;
 		}
 	}	
 }

int main(){
     int t;	cin >> t ;
     for (int i = 1; i <= t ; i++){
 		cin >> n;
 	    int sx, sy, dx,dy;
		cin>>sx>>sy>>dx>>dy; 
		 
		a[0][0] = sx ; 
		a[0][1] = sy ; 
		a[0][2] = sx ; 
		a[0][3] = sy ; 
		a[0][4] = 0 ;
		 
         for ( int i = 1 ; i <= n ;i++ ){
 			cin >> a[i][0] >> a[i][1] >> a[i][2] >> a[i][3] >> a[i][4];
 		}	
		 
         a[n+1][0] = dx ; 
         a[n+1][1] = dy ; 
         a[n+1][2] = dx ; 
         a[n+1][3] = dy ; 
         a[n+1][4] = 0 ;
         
         int ans ;  
         bool visited[n+2] = { false };

         ans = dist (a[0][0] , a[0][1] , a[n+1][0] , a[n+1][1]);        
         visited[0] = true ;
           
         wormhole(sx ,sy , visited , ans , 0);
          
         cout << "#" << i << " : " << ans << endl;
   	}
   return 0;
 }
